 ------
 Including code snippets in site content
 ------
 Kevin Fox
 ------
 2013-02-19
 ------

 ~~    Copyright 2013 Information Control Corporation
 ~~
 ~~ Licensed under the Apache License, Version 2.0 (the "License");
 ~~ you may not use this file except in compliance with the License.
 ~~ You may obtain a copy of the License at
 ~~
 ~~     http://www.apache.org/licenses/LICENSE-2.0
 ~~
 ~~ Unless required by applicable law or agreed to in writing, software
 ~~ distributed under the License is distributed on an "AS IS" BASIS,
 ~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ~~ See the License for the specific language governing permissions and
 ~~ limitations under the License.

 ~~ NOTE: For help with the syntax of this file, see:
 ~~ http://maven.apache.org/doxia/references/apt-format.html

Including code snippets in site content

  The StyleGuide reports automatically extract code snippets from source code in the
  build to include in the style guide.  This same functionality can be applied to other Maven
  site content using the {{{../modules/styleguide-maven-plugin/jcite-mojo.html}jcite}}
  goal.

%{toc|section=1|fromDepth=2|toDepth=3}
  
* Using the {{{../modules/styleguide-maven-plugin/jcite-mojo.html}jcite}} goal

  The goal is enabled using the following configuration.
  
+---
<build>
    ...
    <plugins>
        ...
        <plugin>
            <groupId>${project.groupId}</groupId>
            <artifactId>styleguide-maven-plugin</artifactId>
            <version>${project.version}</version>
            <executions>
                <execution>
                    <id>jcite</id>
                    <goals>
                        <goal>jcite</goal>
                    </goals>
                </execution> 
            </executions>
        </plugin>
        ...
    </plugins>
    ...
</build>
+---

  By default, this goal runs in the <<<post-site>>> lifecycle phase and processes all HTML
  files in the <<<$\{project.reporting.outputDirectory\}>>> folder and its subfolders.
  This allows it to process any JCite tags appearing in the generated site content and
  replace them with the corresponding code snippets.

* JCite tags

  See the {{{http://www.arrenbrecht.ch/jcite/index.htm}JCite web site}} for information on
  how to reference code snippets using JCite tags.
  
* Including JCite tags in content markup

  JCite tags are delimited by square brackets.  Some of the Doxia Markup Languages supported
  by the {{{http://maven.apache.org/plugins/maven-site-plugin/}site plugin}} may treat
  these as special characters.  Be sure to escape these characters appropriately
  in the content markup so that they are not stripped during the rendering process.
  
  The following illustrates how to include a JCite tag in APT markup.
  
+---
[inc:jciteTagMarkup.html]
+---

* Available files to reference

  JCite tags processed by the {{{../modules/styleguide-maven-plugin/jcite-mojo.html}jcite}}
  goal can reference any source file in all projects included in the build.  By default,
  test sources and all resources from these projects can also be referenced.  If desired,
  test sources and/or source and test resources can be excluded from processing.
  
  The {{{../modules/styleguide-maven-plugin/jcite-mojo.html#extraSourcePaths}extraSourcePaths}}
  parameter can be used to define additional paths to be searched for referenced files, as well.
  
* Known Limitations of JCite processing

  * If changing the {{{../modules/styleguide-maven-plugin/jcite-mojo.html#filenamePattern}file name pattern}}
  to be processed, be aware that some file types may be adversely affected when processed 
  by JCite.  In particular, PNG files have been seen to be altered by JCite processing.
  
  []


  